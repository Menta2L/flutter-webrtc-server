apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: webrtc-server
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: webrtc-server
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: webrtc-server
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "webrtc-server.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "webrtc-server.serviceAccountName" . }}
       {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/go/webrtc_server-linux-amd64"]
          volumeMounts:
            - name: web-socket-server-config
              mountPath: /configs/config.ini
              subPath: config.ini
          ports:
            - name: web
              containerPort: {{ .Values.service.general.port }}
              protocol: TCP
            {{- if .Values.service.turn.enabled }}
            - name: turn
              containerPort: {{ .Values.service.turn.port }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: web
            {{- if .Values.service.turn.enabled }}
            tcpSocket:
              port: turn
              initialDelaySeconds: 15
              periodSeconds: 20
            {{- end }}
          readinessProbe:
            httpGet:
              path: /
              port: web
            {{- if .Values.service.turn.enabled }}
            tcpSocket:
              port: turn
              initialDelaySeconds: 5
              periodSeconds: 10
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
       - name: web-socket-server-config
         configMap:
           name: {{ include "common.names.fullname" . }}-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
